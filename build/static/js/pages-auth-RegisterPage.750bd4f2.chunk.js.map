{"version":3,"file":"static/js/pages-auth-RegisterPage.750bd4f2.chunk.js","mappings":"6MAMMA,EAAeC,EAAAA,GAAAA,IAAH,mHAOZC,EAAgBD,EAAAA,GAAAA,IAAH,6GAGFE,EAAAA,EAAAA,KAAAA,IAKXC,EAAcH,EAAAA,GAAAA,MAAH,8SAGcE,EAAAA,EAAAA,KAAAA,GAMIA,EAAAA,EAAAA,KAAAA,IAO7BE,EAASJ,EAAAA,GAAAA,IAAH,sMAIKE,EAAAA,EAAAA,KAAAA,GAGIA,EAAAA,EAAAA,KAAAA,IAKfG,EAAS,CACXC,MAAO,qBACPC,SAAU,4BAgDd,IA7CiB,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,KAAKC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MACrCC,EAAKR,EAAQG,GACrB,OACE,UAACP,EAAD,YACI,wBAAKY,KACL,kBAAMF,SAAUA,EAAhB,WACI,SAACR,EAAD,CACIW,aAAe,WACfC,KAAK,WACLC,YAAc,qBACdN,SAAUA,EACVO,MAAOR,EAAKS,YAEhB,SAACf,EAAD,CACIgB,aAAa,eACbJ,KAAK,WACLC,YAAY,2BACZR,KAAK,WACLE,SAAUA,EACVO,MAAOR,EAAKW,WAEN,aAATZ,IACG,SAACL,EAAD,CACIgB,aAAa,eACbJ,KAAK,kBACLM,aAAa,wCACbb,KAAK,WACLE,SAAUA,EACVO,MAAOR,EAAKa,kBAGnBV,IAAS,SAACb,EAAD,UAAea,KACzB,SAAC,IAAD,CAAQW,MAAM,QAAQC,WAAS,EAACC,MAAO,CAAEC,UAAW,QAApD,SAA8Db,QAElE,SAACT,EAAD,UACa,UAARI,GACG,SAAC,KAAD,CAAMmB,GAAG,YAAT,uCAEA,SAAC,KAAD,CAAMA,GAAG,SAAT,uC,+FCtFVC,EAAoB5B,EAAAA,GAAAA,IAAH,4PAMLE,EAAAA,EAAAA,KAAAA,IAQZ2B,EAAW7B,EAAAA,GAAAA,IAAH,oUA4Bd,IAbqB,SAAC,GAAgB,IAAf8B,EAAc,EAAdA,SACrB,OACM,SAACF,EAAD,WACI,UAACC,EAAD,YACI,gBAAKE,UAAU,YAAf,UACI,SAAC,KAAD,CAAMJ,GAAG,IAAT,4BAEHG,S,yKCmDjB,EAtFqB,WACjB,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAqCC,EAAAA,EAAAA,KAAY,gBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,MAAmB,CAChE/B,KAAM8B,EAAKhC,SACXgC,KAAMA,EAAKA,KACXE,UAAWF,EAAKE,UAChBD,KAAMA,EAAKA,SAJR/B,EAAP,EAAOA,KAAM8B,EAAb,EAAaA,KAAME,EAAnB,EAAmBA,UAAUD,EAA7B,EAA6BA,KAuE7B,OA7BAE,EAAAA,EAAAA,YAAU,WACNN,GAASO,EAAAA,EAAAA,IAAe,eAC1B,CAACP,KAEHM,EAAAA,EAAAA,YAAU,WACN,GAAGD,EACC,OAAkC,MAA9BA,EAAUG,SAASC,YACnBZ,EAAS,8EAGbA,EAAS,yCAIVM,GACCH,GAASU,EAAAA,EAAAA,SAEd,CAACP,EAAME,EAAUL,KAEpBM,EAAAA,EAAAA,YAAU,WACFF,GACAN,EAAS,KAEb,IACIa,aAAaC,QAAQ,OAAOC,KAAKC,UAAUV,IAC7C,MAAMW,GACJC,QAAQC,IAAI,kCAEjB,CAACb,EAAKN,KAEL,SAACoB,EAAA,EAAD,CACI9C,KAAK,WACLC,KAAMA,EACNC,SArES,SAAAyC,GACb,MAAsBA,EAAEI,OAAjBtC,EAAP,EAAOA,MAAOF,EAAd,EAAcA,KACdqB,GACIoB,EAAAA,EAAAA,IAAY,CACR/C,KAAM,WACNgD,IAAK1C,EACLE,MAAAA,MAgEJN,SA3DS,SAAAwC,GACbA,EAAEO,iBACF,IAAQxC,EAAuCT,EAAvCS,SAAUE,EAA6BX,EAA7BW,SAAUE,EAAmBb,EAAnBa,gBAC5B,GAAgB,KAAbJ,EAIH,GAAgB,KAAbE,EAIH,GAAuB,KAApBE,EAAH,CAIA,GAAGF,IAAaE,EAIZ,OAHAW,EAAS,qFACTG,GAASoB,EAAAA,EAAAA,IAAY,CAAE/C,KAAM,WAAYgD,IAAK,WAAYxC,MAAO,WACjEmB,GAASoB,EAAAA,EAAAA,IAAY,CAAE/C,KAAM,WAAYgD,IAAK,kBAAmBxC,MAAO,MAG5EgB,EAAS,MACTG,GAAS7B,EAAAA,EAAAA,IAAS,CAACW,SAAAA,EAASE,SAAAA,UAVxBa,EAAS,mFAJTA,EAAS,sEAJTA,EAAS,4DAwDTrB,MAAOA,KC3EnB,EARqB,WACnB,OACE,SAAC+C,EAAA,EAAD,WACI,SAAC,EAAD","sources":["components/auth/AuthForm.js","components/auth/AuthTemplate.js","containers/auth/RegisterForm.js","pages/auth/RegisterPage.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst AuthFormBlock = styled.div`\r\n    h3{\r\n        margin: 0;\r\n        color: ${palette.gray[8]};\r\n        margin-bottom: 1em;\r\n    }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[5]};\r\n    padding-bottom: 0.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    &:focus {\r\n        color: $oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n    margin-top: 2rem;\r\n    text-align: right;\r\n    a{\r\n        color: ${palette.gray[6]};\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: ${palette.gray[9]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst textMap ={\r\n    login: '로그인',\r\n    register: '회원가입'\r\n}\r\n\r\nconst AuthForm = ({type,form,onChange,onSubmit,error}) => {\r\n    const text=textMap[type];\r\n  return (\r\n    <AuthFormBlock>\r\n        <h3>{text}</h3>\r\n        <form onSubmit={onSubmit}>\r\n            <StyledInput \r\n                authComplete = \"username\"\r\n                name=\"username\"\r\n                placeholder = \"아이디\"\r\n                onChange={onChange}\r\n                value={form.username} \r\n            />\r\n            <StyledInput \r\n                autoComplete=\"new-password\"\r\n                name=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                onChange={onChange}\r\n                value={form.password}\r\n            />\r\n            {type === 'register' && (\r\n                <StyledInput\r\n                    autoComplete=\"new-password\"\r\n                    name=\"passwordConfirm\"\r\n                    palaceholder=\"비밀번호 확인\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    value={form.passwordConfirm}\r\n                />\r\n            )}\r\n            {error && <ErrorMessage>{error}</ErrorMessage>}\r\n            <Button color=\"green\" fullWidth style={{ marginTop: '1rem'}}>{text}</Button>\r\n        </form>\r\n        <Footer>\r\n            {type=== 'login' ? (\r\n                <Link to=\"/register\">회원가입</Link>\r\n            ) : (\r\n                <Link to=\"/login\">로그인</Link>\r\n            )}\r\n        </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from '../../lib/styles/palette';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: ${palette.gray[2]};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index:1051;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area {\r\n        display: block;\r\n        padding-bottom: 2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0,0,0,0.025);\r\n    padding: 2rem;\r\n    width: 360px;\r\n    background: white;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}) => {\r\n  return ( \r\n        <AuthTemplateBlock>\r\n            <WhiteBox>\r\n                <div className=\"logo-area\">\r\n                    <Link to=\"/\">CLASSJOURNAL</Link>\r\n                </div>\r\n                {children}\r\n            </WhiteBox>\r\n        </AuthTemplateBlock>\r\n    );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, {useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {changeField, initializeForm, register} from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { check } from '../../modules/user';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst RegisterForm = () => {\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError,user} = useSelector(({auth, user}) => ({\r\n        form: auth.register,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n    const onChange = e => {\r\n        const {value, name} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'register',\r\n                key: name,\r\n                value\r\n            })\r\n        );\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const { username, password, passwordConfirm} = form;\r\n        if(username === '') {\r\n            setError('아이디를 입력하세요');\r\n            return;\r\n        }\r\n        if(password === ''){\r\n            setError('패스워드를 입력하세요');\r\n            return;\r\n        }\r\n        if(passwordConfirm === ''){\r\n            setError('패스워드 확인을 입력하세요');\r\n            return;\r\n        }\r\n        if(password !== passwordConfirm) {\r\n            setError('비밀번호가 일치하지 않습니다.');\r\n            dispatch(changeField({ form: 'register', key: 'password', value: ''}));\r\n            dispatch(changeField({ form: 'register', key: 'passwordConfirm', value: ''}));\r\n            return;\r\n        }\r\n        setError(null);\r\n        dispatch(register({username,password}));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeForm('register'));\r\n    },[dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(authError) {\r\n            if( authError.response.status === 409) {\r\n                setError('이미 존재하는 계정입니다.');\r\n                return;\r\n            }\r\n            setError('회원가입 실패');\r\n            return;\r\n        }\r\n        \r\n        if(auth) {\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError,dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            navigate(\"/\");\r\n        }\r\n        try{\r\n            localStorage.setItem('user',JSON.stringify(user));\r\n        } catch(e) {\r\n            console.log('localStorage is not working');\r\n        }\r\n    }, [user,navigate]);\r\n    return (\r\n        <AuthForm\r\n            type=\"register\"\r\n            form={form}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n            error={error}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from \"react\";\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n        <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["ErrorMessage","styled","AuthFormBlock","palette","StyledInput","Footer","textMap","login","register","type","form","onChange","onSubmit","error","text","authComplete","name","placeholder","value","username","autoComplete","password","palaceholder","passwordConfirm","color","fullWidth","style","marginTop","to","AuthTemplateBlock","WhiteBox","children","className","useState","setError","navigate","useNavigate","dispatch","useDispatch","useSelector","auth","user","authError","useEffect","initializeForm","response","status","check","localStorage","setItem","JSON","stringify","e","console","log","AuthForm","target","changeField","key","preventDefault","AuthTemplate"],"sourceRoot":""}